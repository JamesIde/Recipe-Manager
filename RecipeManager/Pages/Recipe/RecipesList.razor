@page "/recipes"


@using DataAccess.Model;
@using Services;

@inject IRecipeService RecipeService
@inject NavigationManager NavigationManager

<div class="container-fluid">
    <div class = "row justify-contents-between mb-2">
    <h3>Recipes List</h3>
    </div>
    <button type="button" class="btn btn-sm btn-success mb-2" @onclick='() => NavigationManager.NavigateTo("recipe/create")'><i class="fas fa-plus pr-2"></i>Create</button>
    
    <div class = "row">
        <table class="table table-striped table-hover table-sm">
  <thead>
    <tr>
      <th scope="col">#</th>
      <th scope="col">Title</th>
      <th scope="col">Description</th>
      <th scope="col">Date Created</th>
      <th scope="col">Date Updated</th>
    </tr>
  </thead>


  <tbody>
      @if (!Recipes.Any())
        {
            <tr>
                <th scope="row" colspan="5">No recipes available</th>
            </tr>
        }else{
            foreach (var recipe in Recipes)
            {
               <tr @onclick="() => RedirectTo(recipe.Id)" class = "cursor-pointer">

                         <th scope="row">@recipe.Id</th>
                         <td>@recipe.Title</td>
                         <td>@recipe.Description</td>
                         <td>@recipe.DateCreated</td>
                        <td>@recipe.DateUpdated</td>
               </tr>  
            }
        }
  </tbody>
</table>
    </div>
</div>
@code {

    @* On page load, create new list of recipes*@

    List<Recipe> Recipes = new List<Recipe>();

    protected override async Task OnInitializedAsync()
    {
        Recipes = RecipeService.List();
    }

    private void RedirectTo(int recipeId)
    {
        NavigationManager.NavigateTo($"/recipe/details/{recipeId}");
    }

}
